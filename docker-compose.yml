services:
  webserver:
    image: nginx:stable
    container_name: minimalist-webserver
    volumes:
      - ./.docker/webserver/default.conf:/etc/nginx/conf.d/default.conf
      - ./var/nginx/:/var/log/nginx/
      - .:/var/www/html
    ports:
      - "80:80"
    restart: always
    depends_on:
      - app
    networks:
      - minimalist-webserver-network
    healthcheck:
      test: curl -s http://localhost/up > /dev/null || exit 1
      interval: 5s
      timeout: 10s
      retries: 10

  app:
    build: ./.docker/php
    container_name: minimalist-app
    restart: always
    volumes:
      - ./.docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./.docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - .:/var/www/html
    ports:
      - "9000:9000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      PHP_IDE_CONFIG: "serverName=MinimaList"
    networks:
      - minimalist-db-network
      - minimalist-webserver-network

  db:
    image: mysql:8.3.0
    command: mysqld --default-authentication-plugin=mysql_native_password
    container_name: minimalist-db
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - minimalist-db-network
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10

volumes:
  db_data:
    driver: local
    name: minimalist_db_data

networks:
  minimalist-db-network:
    driver: bridge
    name: minimalist-db-network
  minimalist-webserver-network:
    driver: bridge
    name: minimalist-webserver-network
